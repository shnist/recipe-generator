{
  "name": "nid",
  "version": "0.3.2",
  "description": "Nice clean-mouthed random id generation, without any swearing!",
  "main": "nid.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/rjrodger/nid.git"
  },
  "scripts": {
    "test": "mocha test/*.test.js"
  },
  "keywords": [
    "random",
    "unique",
    "id",
    "identifier",
    "generate",
    "generator",
    "generation",
    "swear",
    "curse"
  ],
  "author": {
    "name": "Richard Rodger",
    "url": "@rjrodger"
  },
  "license": "MIT",
  "files": [
    "README.md",
    "LICENSE.txt",
    "nid.js"
  ],
  "devDependencies": {
    "mocha": "~1.17.1"
  },
  "readme": "# nid\n\n### Nice clean-mouthed random id generation, without any swearing!\n\nA Node.js module that generates random identifiers for public consumption. Swear words not included.\n\n### Support\n\nIf you're using this module, feel free to contact me on twitter if you have any questions! :) [@rjrodger](http://twitter.com/rjrodger)\n\nCurrent Version: 0.3.2\n\nTested on: node 0.10.24\n\n\n### What it Does\n\nThis module is useful for custom short links, password generation and\nany sort of unique tag an end user might see.\n\nBy default the [big seven curse words](http://en.wikipedia.org/wiki/Seven_dirty_words) are avoided\n(thanks [@dshaw](http://twitter.com/dshaw)!). The [Battlestar Galactica version](http://en.battlestarwiki.org/wiki/Frak) of one of the big seven is also avoided.\n\n\n### Quick example\n\n```JavaScript\nvar nid = require('nid')\n\n// generate a 6 character alphanumberic id, like: ytnzt2\nconsole.log( nid() )\n\n// generate a 3 character alphanumberic id, like: 5rg\nconsole.log( nid(3) )\n\n```\n\n\n## Install\n\n```sh\nnpm install nid\n```\n\n\n## Length\n\nYou can change the length of the identifier string by passing an\ninteger to _nid_, as per the quick example above. The default\nalphanumeric alphabet is used.\n\n\n## Options\n\nYou can change the ids generated by passing an options object to the\n_nid_ function. A new, custom, function is returned. For example:\n\n```JavaScript\nvar mynid = require('nid')({length:8})\n\n// generate an 8 character alphanumberic id, like: qnzvetvp\nconsole.log( mynid() )\n```\n\nYou have the following options:\n\n   * _length_: number of characters in the id string\n   * _alphabet_: a string containing the set of characters in the id, e.g. 1234567890abcdef\n   * _curses_: specify the list of curse words to avoid (you can use _exclude_ as an alias if you don't want to sound quaint)\n\nYou can specify the curses as:\n\n   * an array of strings: [\"gosh\",\"darn\"]\n   * a CSV formatted string: \"gosh, darn\"\n   * a regular expression: matches are excluded\n   * a function: first arg is the proposed id, return true to exclude\n\nAs a convenience you can use the following alphabet shortcuts:\n\n   * _hex_: alphabet is '0123456789abcdef'\n   * _HEX_: alphabet is '0123456789ABCDEF'\n\n### Examples:\n\n```JavaScript\nvar nid = require('nid')\n\nvar nid_ABC = nid({alphabet:'ABC'})\nconsole.log(nid_ABC()) // prints something like BCCABB\n\nvar nid_hex = nid({hex:1})\nconsole.log(nid_hex()) // prints something like 47b5df\n\nvar nid_noa = nid({curses:/a/})\nconsole.log(nid_noa()) // never includes an 'a' character\n```\n\n## How it Works\n\nKeep getting a random character from a given alphabet of characters,\nuntil you have enough to meet the length requirement. Then check if it\ncontains a curse word (case-insensitive). If so, try again.\n\n\n\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/rjrodger/nid/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rjrodger/nid/issues"
  },
  "homepage": "https://github.com/rjrodger/nid",
  "_id": "nid@0.3.2",
  "dist": {
    "shasum": "ef80bc69b82ede90209d3b2f4f6b28e524e6d53d"
  },
  "_from": "nid@~0.3.2",
  "_resolved": "http://registry.npmjs.org/nid/-/nid-0.3.2.tgz"
}
